{"version":3,"sources":["map.js","UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["Map","props","ref","React","createRef","map","geometry","this","platform","H","service","Platform","apikey","process","layers","createDefaultLayers","current","vector","normal","pixelRatio","window","devicePixelRatio","zoom","ui","UI","createDefault","getControl","waypoints","waypoint","console","log","routingParameters","Object","values","mappedPosition","flat","getRoutingService","calculateRoute","result","route","routeShape","startPoint","endPoint","linestring","response","shape","geo","LineString","forEach","point","parts","split","pushLatLngAlt","routeLine","Polyline","style","strokeColor","lineWidth","startMarker","Marker","lat","latitude","lng","longitude","endMarker","addObjects","getViewModel","setLookAtData","bounds","getBoundingBox","error","alert","message","className","Navbar","variant","Container","Brand","href","Nav","Link","width","height","Component","UserForm","setGeometry","API_KEY","colourStyles","control","styles","backgroundColor","option","isDisabled","isFocused","isSelected","color","undefined","cursor","input","placeholder","singleValue","useState","form","setForm","origin","setOrigin","destination","setDestination","useEffect","handleChange","target","name","value","prevForm","loc","coords","axios","get","then","res","data","items","position","GetOrigin","GetDestination","onBlur","type","marginTop","onChange","event","vehicle","options","label","Button","onClick","CalcRoute","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea9d563e.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport H from \"@here/maps-api-for-javascript\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\n\nexport default class Map extends React.Component {\n    constructor(props) {\n      super(props);\n      // the reference to the container\n      this.ref = React.createRef();\n      // reference to the map\n      this.map = null;\n      const { geometry } = this.props;\n    }\n    componentDidMount() {\n      const API_KEY = process.env.REACT_APP_HERE;\n      if (!this.map) {\n        // instantiate a platform, default layers and a map as usual\n        const platform = new H.service.Platform({\n          apikey: API_KEY\n        });\n        const layers = platform.createDefaultLayers();\n        const map = new H.Map(\n          this.ref.current,\n          layers.vector.normal.map,\n          {\n            pixelRatio: window.devicePixelRatio,\n            zoom: 2\n          });\n          var ui = H.ui.UI.createDefault(map, layers);\n        ui.getControl('zoom');\n\n        const waypoints = this.props.geometry[0].waypoint;\n        console.log(waypoints);\n        // Create the parameters for the routing request:\n        var routingParameters = {\n          // The routing mode:\n          'mode': 'fastest;car;',\n          // The start point of the route:\n          'waypoint0': `geo!${Object.values(waypoints[0].mappedPosition).flat()}`,\n          // The end point of the route:\n          'waypoint1': `geo!${Object.values(waypoints[1].mappedPosition).flat()}`,\n          // To retrieve the shape of the route we choose the route\n          // representation mode 'display'\n          'representation': 'display'\n        };\n\n        // Define a callback function to process the routing response:\n        var onResult = function(result) {\n          var route,\n            routeShape,\n            startPoint,\n            endPoint,\n            linestring;\n          if(result.response.route) {\n          // Pick the first route from the response:\n          route = result.response.route[0];\n          // Pick the route's shape:\n          routeShape = route.shape;\n\n          // Create a linestring to use as a point source for the route line\n          linestring = new H.geo.LineString();\n\n          // Push all the points in the shape into the linestring:\n          routeShape.forEach(function(point) {\n            var parts = point.split(',');\n            linestring.pushLatLngAlt(parts[0], parts[1]);\n          });\n\n          // Retrieve the mapped positions of the requested waypoints:\n          startPoint = route.waypoint[0].mappedPosition;\n          endPoint = route.waypoint[1].mappedPosition;\n\n          // Create a polyline to display the route:\n          var routeLine = new H.map.Polyline(linestring, {\n            style: { strokeColor: 'blue', lineWidth: 3 }\n          });\n\n          // Create a marker for the start point:\n          var startMarker = new H.map.Marker({\n            lat: startPoint.latitude,\n            lng: startPoint.longitude\n          });\n\n          // Create a marker for the end point:\n          var endMarker = new H.map.Marker({\n            lat: endPoint.latitude,\n            lng: endPoint.longitude\n          });\n\n          // Add the route polyline and the two markers to the map:\n          map.addObjects([routeLine, startMarker, endMarker]);\n\n          // Set the map's viewport to make the whole route visible:\n          map.getViewModel().setLookAtData({bounds: routeLine.getBoundingBox()});\n          }\n        };\n\n        // Get an instance of the routing service:\n        var router = platform.getRoutingService();\n\n        // Call calculateRoute() with the routing parameters,\n        // the callback and an error callback function (called if a\n        // communication error occurs):\n        router.calculateRoute(routingParameters, onResult,\n          function(error) {\n            alert(error.message);\n          });\n        this.map = map;\n      }\n    }\n  \n    render() {\n      \n      return (\n        <div className=\"App\">\n          <div className='Background'>\n          <div className='Background-image'>\n          <Navbar className='navbar' variant=\"light\">\n            <Container>\n            <Navbar.Brand href=\"#home\">Ecotrek</Navbar.Brand>\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#carbon\">Resources</Nav.Link>\n            </Nav>\n            </Container>\n          </Navbar>\n            <div\n              style={{ width: '600px', height:'600px' }}\n              ref={this.ref}\n            />\n          </div>\n          </div>\n        </div>\n      )\n    }\n  }","import './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select'\n\nexport default function UserForm({setGeometry}) {\n  const API_KEY = process.env.REACT_APP_HERE;\n\n  const options = [\n    { value: 'pedestrian', label: 'On Foot'},\n    { value: 'car', label: 'Car'},\n    { value: 'truck', label: 'Truck'},\n    { value: 'bicycle', label: 'Bicycle'},\n    { value: 'scooter', label: 'Scooter'}\n  ]\n  \n  const colourStyles = {\n      control: (styles) => ({ ...styles, backgroundColor: 'white'}),\n      option: (styles, { isDisabled, isFocused, isSelected}) => {\n        const color = 'black';\n        return {\n          ...styles,\n          color: '#000000',\n          backgroundColor: isDisabled\n            ? undefined\n            : isSelected\n            ? '#8FC886'\n            : isFocused\n            ? '#8FC886'\n            : undefined,\n  \n          cursor: isDisabled ? 'not-allowed' : 'default',\n    \n          ':active': {\n            ...styles[':active'],\n            backgroundColor: !isDisabled\n            ? isFocused\n                ? '#76A86E'\n                : '#8FC886'\n            : undefined\n            ? isSelected\n              ? '#76A86E'\n              : '#8FC886'\n            : undefined,\n          },\n        };\n      },\n      input: (styles) => ({ ...styles}),\n      placeholder: (styles) => ({ ...styles}),\n      singleValue: (styles) => ({ ...styles, color: 'black'}),\n  };\n\n  const [form, setForm] = useState({});\n  const [origin, setOrigin] = useState(null);\n  const [destination, setDestination] = useState(null);\n\n  //use location name to get coordinates for routing\n  function GetOrigin(loc) {\n    let location;\n    let coords = '';\n    axios.get(`https://geocode.search.hereapi.com/v1/geocode?apikey=${API_KEY}&q=${loc}`)\n      .then(res => {\n        //console.log(res.data.items[0]);\n        coords = (res.data.items[0].position['lat'] + ',' + res.data.items[0].position['lng']); //string of coordinates\n        setOrigin(coords);\n      })\n  }\n\n  function GetDestination(loc) {\n    let location;\n    let coords = '';\n    axios.get(`https://geocode.search.hereapi.com/v1/geocode?apikey=${API_KEY}&q=${loc}`)\n      .then(res => {\n        location = res.data;\n        //console.log(res.data.items[0].position['lat']);\n        coords = (res.data.items[0].position['lat'] + ',' + res.data.items[0].position['lng']); //string of coordinates\n        setDestination(coords);\n      })\n  }\n\n  useEffect(() => {\n    if(origin && destination) {\n      console.log(origin);\n      console.log(destination);\n    }\n  }, [origin, destination])\n\n  //find a route from origin, destination, and transportation mode\n  function CalcRoute() {\n    let route;\n    axios.get(`https://route.ls.hereapi.com/routing/7.2/calculateroute.json?waypoint0=${origin}&waypoint1=${destination}&mode=fastest;${form.vehicle};traffic:enabled&departure=now&apiKey=${API_KEY}&vehicletype=gasoline,5&routesummarytype=Co2Emission`)\n      .then(res => {\n        route = res.data.response.route;\n        console.log(route);\n        setGeometry(route);\n      })\n  }\n\n  const handleChange = ({ target }) => {\n    console.log(target.name);\n    const { name, value } = target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value\n    }));\n    if(name === 'origin') {\n      GetOrigin(value);\n    } else if(name === 'destination') {\n      GetDestination(value);\n    }\n  };\n\n  return (\n    <>\n    <div className=\"App\">\n      <div className='Background'>\n      <div className='Background-image'>\n      <Navbar className='navbar' variant=\"light\">\n        <Container>\n        <Navbar.Brand href=\"#home\">Ecotrek</Navbar.Brand>\n        <Nav className=\"me-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#carbon\">Resources</Nav.Link>\n        </Nav>\n        </Container>\n      </Navbar>\n      <header className=\"App-header\">\n      <h1 className='title'>Ecotrek</h1>\n      <h2 className='description'>Embark on an eco-conscious journey<br/>by tracking your carbon emissions<br/>from a start and end point!</h2>\n      \n        <div className='origin'>\n          <input\n            onBlur = {handleChange}\n            name='origin'\n            type='text'\n            placeholder='Origin'\n          />\n        </div>\n        <div className='destination'>\n          <input\n            onBlur = {handleChange}\n            name='destination'\n            type='text'\n            placeholder='Destination'\n          />\n        </div>\n        <div className='dropdown' style={{marginTop: '20px'}}>\n          <Select \n            onChange = {(event) => setForm(prevForm => ({...prevForm, vehicle: event.value}))}\n            name='transportMode'\n            type='text'\n            styles={colourStyles}\n            options={options}\n            placeholder={<div>Transportation Mode</div>}\n          />\n        </div>\n        <div className='submit'>\n          <Button \n            variant=\"success\"\n            onClick={ () => {\n              CalcRoute();\n            }}\n            type='submit'\n          >Submit</Button>\n        </div>\n    </header>\n    </div>\n    </div>\n    </div>\n    </>\n)}","import './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport Map from './map'\nimport UserForm from './UserForm'\n\nfunction App() {\n  const [geometry, setGeometry] = useState(null);\n  return(\n    <>\n      {!geometry && <UserForm setGeometry={setGeometry}></UserForm>}\n      {geometry && <Map geometry={geometry}/>}\n    </>\n  )\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}